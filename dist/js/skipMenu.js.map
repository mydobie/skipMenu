{"version":3,"file":"js/skipMenu.js","mappings":"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","sources":["webpack://skipMenu/./js/utilities.ts","webpack://skipMenu/./js/button.ts","webpack://skipMenu/./js/menuSection.ts","webpack://skipMenu/./js/menu.ts","webpack://skipMenu/./js/skipMenu.ts","webpack://skipMenu/./js/eventListeners.ts"],"sourcesContent":["export const isVisible = (el: HTMLElement): boolean => {\n  if (el.nodeType === 9 || el.parentElement === null) {\n    return true;\n  } // is at document level\n  const computedStyle = window.getComputedStyle(el);\n  const display = computedStyle.getPropertyValue('display');\n  const visibility = computedStyle.getPropertyValue('visibility');\n  const hidden = el.getAttribute('hidden');\n  if (display === 'none' || visibility === 'hidden' || hidden !== null) {\n    return false;\n  }\n  return isVisible(el.parentNode as HTMLElement);\n};\n\nexport const focusNextElement = (menuButtonId = 'skipMenu_button'): void => {\n  const canHaveFocus =\n    'a:not([disabled]), button:not([disabled]), input:not([disabled]), textarea:not([disabled]), select:not([disabled]), [tabindex]:not([disabled]):not([tabindex=\"-1\"])';\n\n  const focusableElements = document.querySelectorAll(canHaveFocus);\n  const buttonIndex = Array.from(focusableElements).findIndex((el) =>\n    el.isEqualNode(document.getElementById(menuButtonId))\n  );\n  const buttonTabIndex = document.getElementById(menuButtonId).tabIndex || 0;\n\n  /*\n  If buttonIndex === 0 then find next tabIndex of 0\n    If non is found, then done\n\n  If buttonIndex > 0 then find next tabIndex >= buttonIndex\n    If non is found, then  start at beginning looking for tabIndex === 0\n  */\n\n  let nextElement;\n  if (buttonTabIndex === 0) {\n    for (\n      let i = buttonIndex + 1;\n      i < focusableElements.length && !nextElement;\n      i++\n    ) {\n      if (\n        isVisible(focusableElements[i] as HTMLElement) &&\n        (focusableElements[i] as HTMLElement).tabIndex === 0\n      ) {\n        nextElement = focusableElements[i];\n      }\n    }\n  } else {\n    for (\n      let i = buttonIndex + 1;\n      i < focusableElements.length && !nextElement;\n      i++\n    ) {\n      if (\n        isVisible(focusableElements[i] as HTMLElement) &&\n        (focusableElements[i] as HTMLElement).tabIndex >= buttonTabIndex\n      ) {\n        nextElement = focusableElements[i];\n      }\n    }\n    for (let i = 0; i < buttonIndex && !nextElement; i++) {\n      if (\n        isVisible(focusableElements[i] as HTMLElement) &&\n        (focusableElements[i] as HTMLElement).tabIndex === 0\n      ) {\n        nextElement = focusableElements[i];\n      }\n    }\n  }\n\n  if (nextElement) {\n    (nextElement as HTMLElement).focus();\n  } else {\n    document.getElementById(menuButtonId).focus();\n  }\n};\n\nexport const isTouchEnabled = () =>\n  'ontouchstart' in window ||\n  navigator.maxTouchPoints > 0 ||\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  navigator.msMaxTouchPoints > 0;\n\nexport const isFocusable = (element: HTMLElement): boolean => {\n  if (\n    element.getAttribute('href') !== null ||\n    (element.hasAttribute('contentEditable') &&\n      element.getAttribute('contentEditable').toLowerCase() !== 'false') ||\n    element.getAttribute('tabindex') !== null\n  ) {\n    return true;\n  }\n\n  const tag = element.tagName.toLowerCase();\n  return ['button', 'details', 'input', 'iframe', 'select', 'textarea'].some(\n    (t) => t === tag\n  );\n};\n","import { SkipMenuConfig } from './skipMenu';\nimport { isTouchEnabled } from './utilities';\n\nexport const toggleMenu = (\n  config: SkipMenuConfig,\n  keepVisibleOnClose = false\n) => {\n  const menu = document.getElementById(config.menuId);\n  if (menu) {\n    const isCurrentlyExpanded = menu.style.display !== 'none';\n    if (isCurrentlyExpanded) {\n      closeMenu(config, keepVisibleOnClose);\n    } else {\n      openMenu(config);\n    }\n  }\n};\n\nexport const openMenu = (config: SkipMenuConfig) => {\n  const menu = document.getElementById(config.menuId);\n  if (menu) {\n    const button = document.getElementById(config.buttonId);\n    button.setAttribute('aria-expanded', 'true');\n    menu.style.display = 'block';\n    const firstItem = menu.querySelector('[role=\"menuitem\"]');\n    (firstItem as HTMLElement).focus();\n  }\n};\n\nexport const closeMenu = (\n  config: SkipMenuConfig,\n  keepVisibleOnClose = false\n) => {\n  const menu = document.getElementById(config.menuId);\n  if (menu) {\n    const button = document.getElementById(config.buttonId);\n    button.setAttribute('aria-expanded', 'false');\n    menu.style.display = 'none';\n    if (!keepVisibleOnClose && !config.alwaysShow) {\n      document.getElementById(config.id).classList.add('skipMenu-hidden');\n    }\n    button.focus();\n  }\n};\n\nconst toolTipText = (accessKey: string, startText: string): string => {\n  if (isTouchEnabled()) {\n    return null;\n  }\n\n  const userAgent = window.navigator.userAgent.toLowerCase();\n  // See https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/accesskey\n  const isMac = /(macintosh|macintel|macppc|mac68k|macos)/.test(userAgent);\n  const isOpera = /(opera|opr)/.test(userAgent);\n  const fireFox = /(firefox)/.test(userAgent);\n\n  let text = startText;\n  if (isMac && isOpera) {\n    text += 'Control + Alt';\n  } else if (isMac) {\n    text += 'Control + Option';\n  } else if (fireFox) {\n    text += 'Alt + Shift';\n  } else {\n    text += 'Alt';\n  }\n\n  text += ' + ' + accessKey;\n\n  return text;\n};\n\nconst toolTip = (config: SkipMenuConfig): HTMLElement | null => {\n  const toolTipTextString = toolTipText(\n    config.accessKey,\n    config.text.tooltipLabel\n  );\n  if (!toolTipTextString) {\n    return null;\n  }\n  const tooltip = document.createElement('div');\n  tooltip.id = config.tooltipId;\n  tooltip.classList.add('tooltip', 'bs-tooltip-bottom');\n  const tooltipArrow = document.createElement('div');\n  tooltipArrow.classList.add('tooltip-arrow');\n  tooltip.appendChild(tooltipArrow);\n  const tooltipInner = document.createElement('div');\n  tooltipInner.classList.add('tooltip-inner');\n  tooltipInner.textContent = toolTipText(\n    config.accessKey,\n    config.text.tooltipLabel\n  );\n  tooltip.appendChild(tooltipInner);\n  return tooltip;\n};\n\nexport const createskipMenuButton = (config: SkipMenuConfig) => {\n  const buttonWrapper = document.createDocumentFragment();\n  const skipMenuButton = document.createElement('button');\n  skipMenuButton.setAttribute('aria-haspopup', 'true');\n  skipMenuButton.setAttribute('aria-expanded', 'false');\n  skipMenuButton.setAttribute('aria-controls', config.menuId);\n  skipMenuButton.classList.add('btn', 'btn-secondary');\n  skipMenuButton.id = config.buttonId;\n  skipMenuButton.textContent = config.text.buttonLabel;\n  if (config.tabIndex) {\n    skipMenuButton.tabIndex = config.tabIndex;\n  }\n\n  skipMenuButton.addEventListener('click', (e) => {\n    e.stopPropagation();\n    e.preventDefault();\n    toggleMenu(config, true);\n  });\n\n  if (!config.alwaysShow) {\n    skipMenuButton.addEventListener('focus', () => {\n      document.getElementById(config.id).classList.remove('skipMenu-hidden');\n    });\n\n    skipMenuButton.addEventListener('blur', () => {\n      if (skipMenuButton.getAttribute('aria-expanded') === 'false') {\n        document.getElementById(config.id).classList.add('skipMenu-hidden');\n      }\n    });\n  }\n\n  buttonWrapper.appendChild(skipMenuButton);\n\n  if (config.useAccessKey) {\n    const skipMenuToolTip = toolTip(config);\n    if (skipMenuToolTip) {\n      skipMenuButton.addEventListener('focus', () => {\n        if (skipMenuButton.getAttribute('aria-expanded') === 'false') {\n          skipMenuToolTip.style.display = 'block';\n        }\n      });\n      skipMenuButton.addEventListener('blur', () => {\n        skipMenuToolTip.style.display = 'none';\n      });\n      skipMenuButton.addEventListener('mouseover', () => {\n        if (skipMenuButton.getAttribute('aria-expanded') === 'false') {\n          skipMenuToolTip.style.display = 'block';\n        }\n      });\n      skipMenuButton.addEventListener('mouseout', () => {\n        skipMenuToolTip.style.display = 'none';\n      });\n\n      buttonWrapper.appendChild(skipMenuToolTip);\n      skipMenuButton.setAttribute('accesskey', config.accessKey);\n    }\n  }\n  return buttonWrapper;\n};\n\n/* ************************************************** */\n","import { isVisible, focusNextElement, isFocusable } from './utilities';\nimport { closeMenu } from './button';\nimport { SkipMenuConfig } from './skipMenu';\n\n/* ********************************** */\n\nconst addMenuItemEvents = (\n  listItem: HTMLDivElement,\n  targetElement: HTMLElement,\n  config: SkipMenuConfig\n) => {\n  const buttonId = config.buttonId;\n  listItem.addEventListener('click', (event) => {\n    closeMenu(config);\n    (targetElement as HTMLElement).focus();\n    event.stopPropagation();\n    event.preventDefault();\n  });\n\n  listItem.addEventListener('keydown', (e) => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      closeMenu(config);\n      (targetElement as HTMLElement).focus();\n    }\n    e.stopPropagation();\n    e.preventDefault();\n    if (e.key === 'Tab') {\n      closeMenu(config);\n      if (e.shiftKey) {\n        document.getElementById(buttonId).focus();\n      } else {\n        focusNextElement(buttonId);\n      }\n    }\n  });\n  return listItem;\n};\n\n// *****************************************************************************\n\nconst landMarkType = (element: HTMLElement, config: SkipMenuConfig) => {\n  const tag = element.tagName;\n  const role = element.getAttribute('role');\n\n  switch (role) {\n    case 'main':\n      return config.text.mainLabel;\n    case 'search':\n      return config.text.searchLabel;\n    case 'navigation':\n      return config.text.navigationLabel;\n    case 'region':\n      return config.text.regionLabel;\n    case 'complementary':\n      return config.text.complementaryLabel;\n    case 'banner':\n      return config.text.bannerLabel;\n    case 'contentinfo':\n      return config.text.footerLabel;\n  }\n  switch (tag.toLowerCase()) {\n    case 'main':\n      return config.text.mainLabel;\n    case 'nav':\n      return config.text.navigationLabel;\n    case 'section':\n      return config.text.sectionLabel;\n    case 'form':\n      return config.text.formLabel;\n    case 'aside':\n      return config.text.complementaryLabel;\n    case 'header':\n      return config.text.bannerLabel;\n    case 'footer':\n      return config.text.footerLabel;\n  }\n  return null;\n};\n\nconst getMenuItemText = (\n  element: HTMLElement,\n  isHeader: boolean,\n  config: SkipMenuConfig\n) => {\n  const landmark = landMarkType(element, config);\n  let text = '';\n  if (element.hasAttribute('aria-label')) {\n    text = element.getAttribute('aria-label');\n  } else if (element.hasAttribute('aria-labelledby')) {\n    text = document\n      .getElementById(element.getAttribute('aria-labelledby'))\n      .innerText.trim();\n  } else if (element.hasAttribute('title')) {\n    text = element.getAttribute('title');\n  }\n\n  if (landmark) {\n    return text ? `${landmark}: ${text}` : landmark;\n  } else if (isHeader) {\n    const headerText = text || element.innerText;\n    return headerText.trim();\n  } else {\n    // unsure what this is, return tagname\n    return element.tagName.toLocaleLowerCase();\n  }\n};\n\n// *****************************************************************************\n\nconst buildMenuItem = (\n  element: HTMLElement,\n  depth: number,\n  config: SkipMenuConfig\n) => {\n  let listItem = document.createElement('div');\n  let listItemText = getMenuItemText(element, !!depth, config);\n\n  if (!listItemText || listItemText === '') {\n    return null;\n  }\n\n  if (depth) {\n    listItem.className = `${config.id}-menu-header-level-${depth}`;\n    listItemText = `${depth}) ${listItemText}`;\n  }\n\n  const text = document.createTextNode(listItemText);\n  listItem.appendChild(text);\n  listItem.setAttribute('role', 'menuitem');\n  listItem.classList.add('dropdown-item');\n  listItem.setAttribute('tabindex', '-1');\n\n  listItem = addMenuItemEvents(listItem, element, config);\n  return listItem;\n};\n\n/* ********************************** */\n\nexport const buildMenuSection = (\n  elements: NodeListOf<Element>,\n  sectionTitle: string,\n  sectionId: string,\n  config: SkipMenuConfig\n) => {\n  if (elements.length === 0) {\n    return null;\n  }\n  const container = document.createElement('div');\n  container.setAttribute('role', 'group');\n  container.id = sectionId;\n  container.setAttribute('aria-labelledby', `${sectionId}-title`);\n  const containerTitle = document.createElement('div');\n  containerTitle.setAttribute('role', 'separator');\n  containerTitle.id = `${sectionId}-title`;\n  containerTitle.appendChild(document.createTextNode(sectionTitle));\n  container.appendChild(containerTitle);\n\n  elements.forEach((element) => {\n    if (isVisible(element as HTMLElement)) {\n      let depth = parseInt(element.tagName.substring(1));\n      if (element.getAttribute('aria-level')) {\n        depth = parseInt(element.getAttribute('aria-level'));\n      }\n\n      if (!isFocusable(element as HTMLElement)) {\n        (element as HTMLElement).tabIndex = -1;\n      }\n      const menuItem = buildMenuItem(element as HTMLElement, depth, config);\n      if (menuItem) {\n        container.appendChild(\n          buildMenuItem(element as HTMLElement, depth, config)\n        );\n      }\n    }\n  });\n  return container;\n};\n","import { SkipMenuConfig } from './skipMenu';\nimport { buildMenuSection } from './menuSection';\nimport { closeMenu } from './button';\n\nconst menuItemsEvent = (\n  menu: HTMLElement,\n  config: SkipMenuConfig\n): HTMLElement => {\n  // const menu = document\n  const menuItems = menu.querySelectorAll('[role=\"menuitem\"]');\n  menuItems.forEach((item, index) => {\n    (item as HTMLElement).tabIndex = -1;\n    item.addEventListener('keydown', (e: KeyboardEvent) => {\n      if (e.key == 'ArrowDown' || e.key == 'ArrowUp') {\n        e.stopPropagation();\n        e.preventDefault();\n        if (e.key === 'ArrowDown') {\n          if (menuItems[index + 1]) {\n            (menuItems[index + 1] as HTMLElement).focus();\n          } else {\n            (menuItems[0] as HTMLElement).focus();\n          }\n        }\n        if (e.key === 'ArrowUp') {\n          if (menuItems[index - 1]) {\n            (menuItems[index - 1] as HTMLElement).focus();\n          } else {\n            (menuItems[menuItems.length - 1] as HTMLElement).focus();\n          }\n        }\n      }\n      if (e.key === 'Escape') {\n        closeMenu(config);\n      }\n    });\n  });\n  return menu;\n};\n\nexport const buildMenu = (config: SkipMenuConfig): DocumentFragment => {\n  // build the actual menu\n  const menuWrapper = document.createDocumentFragment(); // This probably isn't needed\n  const menu = document.createElement('div');\n  menu.setAttribute('role', 'menu');\n  menu.classList.add('dropdown-menu');\n  menu.style.display = 'none';\n  menu.id = config.menuId;\n\n  // attach the sections\n  const headerSection = buildMenuSection(\n    document.querySelectorAll(config.headers),\n    config.text.headingsLabel,\n    `${config.id}_headings`,\n    config\n  );\n  const landmarkSection = buildMenuSection(\n    document.querySelectorAll(config.landmarks),\n    config.text.landmarksLabel,\n    `${config.id}_landmarks`,\n    config\n  );\n\n  if (landmarkSection !== null) {\n    menu.appendChild(landmarkSection);\n  }\n\n  if (headerSection !== null) {\n    menu.appendChild(headerSection);\n  }\n\n  menuWrapper.appendChild(menu);\n\n  // attach the events\n  if (headerSection !== null || landmarkSection !== null) {\n    menuItemsEvent(menu, config);\n    return menuWrapper;\n  }\n  return null;\n};\n","import { createskipMenuButton, closeMenu, openMenu } from './button';\nimport { buildMenu } from './menu';\nimport { addCloseMenuOnClick, addDomChangeListener } from './eventListeners';\n\nexport type SkipMenuConfig = {\n  id?: string;\n  attachTo?: HTMLElement;\n  alwaysShow?: boolean; // This need to be changed to alwaysShow\n  buttonId?: string;\n  menuId?: string;\n  headers?: string;\n  tooltipId?: string;\n  landmarks?: string;\n  reloadOnChange?: boolean;\n  useAccessKey?: boolean;\n  accessKey?: string;\n  tabIndex?: number | null;\n  isRemoved?: boolean;\n  text?: {\n    buttonLabel?: string;\n    headingsLabel?: string;\n    landmarksLabel?: string;\n    tooltipLabel?: string;\n    controlKeyLabel?: string;\n    optionKeyLabel?: string;\n    altKeyLabel?: string;\n    shiftKeyLabel?: string;\n    mainLabel?: string;\n    searchLabel?: string;\n    navigationLabel?: string;\n    regionLabel?: string;\n    complementaryLabel?: string;\n    bannerLabel?: string;\n    footerLabel?: string;\n    sectionLabel?: string;\n    formLabel?: string;\n  };\n};\nclass SkipMenu {\n  config: SkipMenuConfig;\n  constructor(config: SkipMenuConfig) {\n    const defaultConfig: SkipMenuConfig = {\n      id: 'skipMenu',\n      attachTo: document.getElementsByTagName('body')[0],\n      alwaysShow: true,\n      headers: 'h1, h2, h3, h4, h5, h6, [role=heading]',\n      landmarks:\n        'main, [role=main], [role=search], nav, [role=navigation], section, [role=region],  form, aside, [role=complementary], body > header, [role=banner], body > footer, [role=contentinfo]',\n      reloadOnChange: false,\n      useAccessKey: false,\n      accessKey: '0',\n      tabIndex: null,\n      isRemoved: false,\n      text: {\n        buttonLabel: 'Skip to content',\n        headingsLabel: 'Headings',\n        landmarksLabel: 'Landmarks',\n        tooltipLabel: 'Shortcut: ',\n        controlKeyLabel: 'Control',\n        optionKeyLabel: 'Option',\n        altKeyLabel: 'Alt',\n        shiftKeyLabel: 'Shift',\n        mainLabel: 'Main',\n        searchLabel: 'Search',\n        navigationLabel: 'Navigation',\n        regionLabel: 'Region',\n        complementaryLabel: 'Complementary',\n        bannerLabel: 'Banner',\n        footerLabel: 'Footer',\n        sectionLabel: 'Section',\n        formLabel: 'Form',\n      },\n    };\n    this.config = { ...defaultConfig, ...config };\n\n    if (config?.text) {\n      this.config.text = { ...defaultConfig.text, ...config.text };\n    }\n    this.config.menuId = this.config.id + '_menu';\n    this.config.buttonId = this.config.id + '_button';\n    this.config.tooltipId = this.config.id + '_tooltip';\n\n    this.update = this.update.bind(this);\n    this.getConfig = this.getConfig.bind(this);\n  }\n\n  static version = 'VERSION CANNOT BE DETERMINED'; // Note - this is replace on build\n\n  getConfig() {\n    return this.config;\n  }\n\n  init() {\n    // Load DOM change listener\n    addDomChangeListener(this.config, this.update);\n\n    // Add listener to close menu\n    addCloseMenuOnClick(this.config);\n    this._add();\n  }\n\n  _add(): void | null {\n    // builds the skipMenu container\n    if (this.config.isRemoved) {\n      return null;\n    }\n    const skipMenu = document.createDocumentFragment();\n    const skipMenuWrapper = document.createElement('div');\n    skipMenu.appendChild(skipMenuWrapper);\n\n    skipMenuWrapper.id = this.config.id;\n    skipMenuWrapper.setAttribute('data-skip-menu', 'true');\n    if (!this.config.alwaysShow) {\n      skipMenuWrapper.classList.add('skipMenu-hidden');\n    }\n\n    // builds the button\n    const skipMenuButton = createskipMenuButton(this.config);\n    skipMenuWrapper.appendChild(skipMenuButton);\n\n    const menu = buildMenu(this.config);\n\n    if (menu === null) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'No landmarks or headers found  - skipmenu could not be built'\n      );\n      return;\n    }\n\n    // Append menu items and attach event listeners\n    skipMenuWrapper.appendChild(menu);\n    this.config.attachTo.prepend(skipMenuWrapper);\n  }\n\n  update() {\n    const currentMenu = document.getElementById(this.config.menuId);\n    const updatedMenu = buildMenu(this.config);\n    if (currentMenu && updatedMenu) {\n      const currentMenu = document.getElementById(this.config.menuId);\n      currentMenu.parentNode.replaceChild(updatedMenu, currentMenu);\n    }\n    if (updatedMenu && !currentMenu) {\n      this._add();\n    }\n    if (!updatedMenu && currentMenu) {\n      this._remove();\n    }\n  }\n\n  open() {\n    openMenu(this.getConfig());\n  }\n\n  close() {\n    closeMenu(this.getConfig());\n  }\n\n  _remove() {\n    const skipMenu = document.getElementById(this.config.id);\n    if (skipMenu) {\n      skipMenu.remove();\n    }\n  }\n\n  remove() {\n    this.config.isRemoved = true;\n    this._remove();\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nwindow.SkipMenu = SkipMenu;\n","import { SkipMenuConfig } from './skipMenu';\nimport { closeMenu } from './button';\n\nexport const addCloseMenuOnClick = (config: SkipMenuConfig) => {\n  document.addEventListener('click', (e) => {\n    const menu = document.getElementById(config.menuId);\n    if (menu) {\n      const isMenuOpen = menu.style.display !== 'none';\n      if (isMenuOpen && !(e.target as HTMLElement).closest(`#${config.id}`)) {\n        closeMenu(config);\n      }\n    }\n  });\n};\n\nexport const addDomChangeListener = (\n  config: SkipMenuConfig,\n  update: () => void\n) => {\n  if (config.reloadOnChange) {\n    const obv = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        if (\n          !Array.from(mutation.removedNodes).some(\n            (removedNode) => (removedNode as HTMLElement).id === config.id\n          ) &&\n          !Array.from(mutation.addedNodes).some(\n            (addedNode) => (addedNode as HTMLElement).id === config.id\n          ) &&\n          !(mutation.target as HTMLElement).closest(`#${config.id}`) &&\n          mutation.attributeName !== 'tabindex' &&\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          //@ts-ignore\n          mutation.addedNodes[0]?.data !== '\\n\\n'\n        ) {\n          update();\n        }\n      });\n    });\n    obv.observe(document, {\n      attributes: true,\n      subtree: true,\n      childList: true,\n    });\n  }\n};\n"],"names":["isVisible","el","nodeType","parentElement","computedStyle","window","getComputedStyle","display","getPropertyValue","visibility","hidden","getAttribute","parentNode","openMenu","config","menu","document","getElementById","menuId","buttonId","setAttribute","style","querySelector","focus","closeMenu","keepVisibleOnClose","button","alwaysShow","id","classList","add","toolTipText","accessKey","startText","navigator","maxTouchPoints","msMaxTouchPoints","userAgent","toLowerCase","isMac","test","isOpera","fireFox","text","buildMenuItem","element","depth","listItem","createElement","listItemText","isHeader","landmark","tag","tagName","mainLabel","searchLabel","navigationLabel","regionLabel","complementaryLabel","bannerLabel","footerLabel","sectionLabel","formLabel","landMarkType","hasAttribute","innerText","trim","toLocaleLowerCase","getMenuItemText","className","createTextNode","appendChild","targetElement","addEventListener","event","stopPropagation","preventDefault","e","key","shiftKey","menuButtonId","nextElement","focusableElements","querySelectorAll","buttonIndex","Array","from","findIndex","isEqualNode","buttonTabIndex","tabIndex","i","length","focusNextElement","addMenuItemEvents","buildMenuSection","elements","sectionTitle","sectionId","container","containerTitle","forEach","parseInt","substring","some","t","isFocusable","buildMenu","menuWrapper","createDocumentFragment","headerSection","headers","headingsLabel","landmarkSection","landmarks","landmarksLabel","menuItems","item","index","menuItemsEvent","defaultConfig","attachTo","getElementsByTagName","reloadOnChange","useAccessKey","isRemoved","buttonLabel","tooltipLabel","controlKeyLabel","optionKeyLabel","altKeyLabel","shiftKeyLabel","this","tooltipId","update","bind","getConfig","init","MutationObserver","mutations","mutation","removedNodes","removedNode","addedNodes","addedNode","target","closest","attributeName","data","observe","attributes","subtree","childList","addCloseMenuOnClick","_add","skipMenu","skipMenuWrapper","skipMenuButton","buttonWrapper","textContent","toggleMenu","remove","tooltip","tooltipArrow","tooltipInner","toolTip","createskipMenuButton","prepend","console","warn","currentMenu","updatedMenu","replaceChild","_remove","open","close","version","SkipMenu"],"sourceRoot":""}